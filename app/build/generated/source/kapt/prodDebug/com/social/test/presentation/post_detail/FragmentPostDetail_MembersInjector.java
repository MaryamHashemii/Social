// Generated by Dagger (https://dagger.dev).
package com.social.test.presentation.post_detail;

import com.social.test.common.imageloading.ImageLoadingService;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FragmentPostDetail_MembersInjector implements MembersInjector<FragmentPostDetail> {
  private final Provider<ImageLoadingService> imageLoadingServiceProvider;

  private final Provider<CommentAdapter> commentAdapterProvider;

  public FragmentPostDetail_MembersInjector(
      Provider<ImageLoadingService> imageLoadingServiceProvider,
      Provider<CommentAdapter> commentAdapterProvider) {
    this.imageLoadingServiceProvider = imageLoadingServiceProvider;
    this.commentAdapterProvider = commentAdapterProvider;
  }

  public static MembersInjector<FragmentPostDetail> create(
      Provider<ImageLoadingService> imageLoadingServiceProvider,
      Provider<CommentAdapter> commentAdapterProvider) {
    return new FragmentPostDetail_MembersInjector(imageLoadingServiceProvider, commentAdapterProvider);
  }

  @Override
  public void injectMembers(FragmentPostDetail instance) {
    injectImageLoadingService(instance, imageLoadingServiceProvider.get());
    injectCommentAdapter(instance, commentAdapterProvider.get());
  }

  @InjectedFieldSignature("com.social.test.presentation.post_detail.FragmentPostDetail.imageLoadingService")
  public static void injectImageLoadingService(FragmentPostDetail instance,
      ImageLoadingService imageLoadingService) {
    instance.imageLoadingService = imageLoadingService;
  }

  @InjectedFieldSignature("com.social.test.presentation.post_detail.FragmentPostDetail.commentAdapter")
  public static void injectCommentAdapter(FragmentPostDetail instance,
      CommentAdapter commentAdapter) {
    instance.commentAdapter = commentAdapter;
  }
}
