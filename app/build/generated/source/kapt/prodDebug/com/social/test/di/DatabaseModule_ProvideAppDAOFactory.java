// Generated by Dagger (https://dagger.dev).
package com.social.test.di;

import com.social.test.data.local.dao.AppDao;
import com.social.test.data.local.dao.AppDb;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DatabaseModule_ProvideAppDAOFactory implements Factory<AppDao> {
  private final Provider<AppDb> dbProvider;

  public DatabaseModule_ProvideAppDAOFactory(Provider<AppDb> dbProvider) {
    this.dbProvider = dbProvider;
  }

  @Override
  public AppDao get() {
    return provideAppDAO(dbProvider.get());
  }

  public static DatabaseModule_ProvideAppDAOFactory create(Provider<AppDb> dbProvider) {
    return new DatabaseModule_ProvideAppDAOFactory(dbProvider);
  }

  public static AppDao provideAppDAO(AppDb db) {
    return Preconditions.checkNotNullFromProvides(DatabaseModule.INSTANCE.provideAppDAO(db));
  }
}
