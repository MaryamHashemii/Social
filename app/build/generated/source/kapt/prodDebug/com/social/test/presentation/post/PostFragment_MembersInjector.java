// Generated by Dagger (https://dagger.dev).
package com.social.test.presentation.post;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PostFragment_MembersInjector implements MembersInjector<PostFragment> {
  private final Provider<PostAdapter> postAdapterProvider;

  private final Provider<MainLoadStateAdapter> moreLoadAdapterProvider;

  public PostFragment_MembersInjector(Provider<PostAdapter> postAdapterProvider,
      Provider<MainLoadStateAdapter> moreLoadAdapterProvider) {
    this.postAdapterProvider = postAdapterProvider;
    this.moreLoadAdapterProvider = moreLoadAdapterProvider;
  }

  public static MembersInjector<PostFragment> create(Provider<PostAdapter> postAdapterProvider,
      Provider<MainLoadStateAdapter> moreLoadAdapterProvider) {
    return new PostFragment_MembersInjector(postAdapterProvider, moreLoadAdapterProvider);
  }

  @Override
  public void injectMembers(PostFragment instance) {
    injectPostAdapter(instance, postAdapterProvider.get());
    injectMoreLoadAdapter(instance, moreLoadAdapterProvider.get());
  }

  @InjectedFieldSignature("com.social.test.presentation.post.PostFragment.postAdapter")
  public static void injectPostAdapter(PostFragment instance, PostAdapter postAdapter) {
    instance.postAdapter = postAdapter;
  }

  @InjectedFieldSignature("com.social.test.presentation.post.PostFragment.moreLoadAdapter")
  public static void injectMoreLoadAdapter(PostFragment instance,
      MainLoadStateAdapter moreLoadAdapter) {
    instance.moreLoadAdapter = moreLoadAdapter;
  }
}
