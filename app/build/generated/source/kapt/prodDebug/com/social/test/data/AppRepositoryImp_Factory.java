// Generated by Dagger (https://dagger.dev).
package com.social.test.data;

import com.social.test.data.local.dao.AppDao;
import com.social.test.data.sharedPref.DataSharedPref;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppRepositoryImp_Factory implements Factory<AppRepositoryImp> {
  private final Provider<AppDao> appDaoProvider;

  private final Provider<DataSharedPref> sharedPrefProvider;

  public AppRepositoryImp_Factory(Provider<AppDao> appDaoProvider,
      Provider<DataSharedPref> sharedPrefProvider) {
    this.appDaoProvider = appDaoProvider;
    this.sharedPrefProvider = sharedPrefProvider;
  }

  @Override
  public AppRepositoryImp get() {
    return newInstance(appDaoProvider.get(), sharedPrefProvider.get());
  }

  public static AppRepositoryImp_Factory create(Provider<AppDao> appDaoProvider,
      Provider<DataSharedPref> sharedPrefProvider) {
    return new AppRepositoryImp_Factory(appDaoProvider, sharedPrefProvider);
  }

  public static AppRepositoryImp newInstance(AppDao appDao, DataSharedPref sharedPref) {
    return new AppRepositoryImp(appDao, sharedPref);
  }
}
